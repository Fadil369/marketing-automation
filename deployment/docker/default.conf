# BrainSAIT Marketing Platform - Default Server Configuration

# Upstream for API services
upstream api_backend {
    server api.brainsait.io:443;
    keepalive 32;
}

# Main server block
server {
    listen 8080;
    server_name reach.brainsait.io staging.reach.brainsait.io localhost;
    root /usr/share/nginx/html;
    index index.html;
    
    # Security
    server_tokens off;
    client_max_body_size 10M;
    
    # Rate limiting
    limit_conn perip 10;
    limit_conn perserver 100;
    limit_req zone=general burst=20 nodelay;
    
    # Logging
    error_log /var/log/nginx/app_error.log;
    access_log /var/log/nginx/app_access.log main;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 '{"status":"healthy","service":"brainsait-marketing-platform","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # API proxy
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass https://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # WebSocket proxy for real-time features
    location /ws/ {
        proxy_pass https://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific settings
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 5s;
    }
    
    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Gzip static files
        gzip_static on;
        
        # CORS for fonts and assets
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin *;
        }
    }
    
    # HTML files with short cache
    location ~* \.html$ {
        expires 5m;
        add_header Cache-Control "public, no-transform";
        add_header Vary "Accept-Encoding";
        
        # Security headers for HTML
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
    }
    
    # Service Worker with no cache
    location /sw.js {
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }
    
    # Manifest file
    location /manifest.json {
        expires 1d;
        add_header Cache-Control "public";
        add_header Content-Type application/manifest+json;
    }
    
    # Robots.txt
    location /robots.txt {
        expires 1d;
        add_header Content-Type text/plain;
        try_files $uri =404;
    }
    
    # Sitemap
    location /sitemap.xml {
        expires 1d;
        add_header Content-Type application/xml;
        try_files $uri =404;
    }
    
    # Security.txt
    location /.well-known/security.txt {
        expires 1d;
        add_header Content-Type text/plain;
        return 200 'Contact: security@brainsait.io
Expires: 2025-12-31T23:59:59.000Z
Acknowledgments: https://brainsait.io/security/acknowledgments
Preferred-Languages: en, ar
Canonical: https://reach.brainsait.io/.well-known/security.txt';
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(htaccess|htpasswd|ini|log|sh|inc|bak)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Main SPA route - must be last
    location / {
        limit_req zone=general burst=50 nodelay;
        
        try_files $uri $uri/ /index.html;
        
        # Cache control for SPA routes
        location = /index.html {
            expires off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
        root /usr/share/nginx/html;
    }
    
    location = /50x.html {
        internal;
        root /usr/share/nginx/html;
    }
}

# Redirect HTTP to HTTPS (if SSL termination is not handled by load balancer)
server {
    listen 8080;
    server_name reach.brainsait.io;
    return 301 https://$server_name$request_uri;
}

# Rate limiting for authentication endpoints
server {
    listen 8080;
    server_name ~^(.+)$;
    
    location /api/auth/ {
        limit_req zone=login burst=3 nodelay;
        
        proxy_pass https://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Additional security for auth endpoints
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
    }
}